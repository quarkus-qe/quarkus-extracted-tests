name: "PR"
on:
  - pull_request
jobs:
  validation:
    name: Builds project without running tests
    if: ${{ ! contains(github.ref, 'main') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          check-latest: true
          cache: 'maven'
      - name: Detect OS Architecture
        id: detect-os-arch
        run: |
          echo "detected-os-arch=$(uname -m)" >> "$GITHUB_OUTPUT"
      - name: Build extensions managed dependencies
        env:
          DETECTED_OS_ARCH: ${{ steps.detect-os-arch.outputs.detected-os-arch }}
        run: |
          mvn -V -B --no-transfer-progress clean install -DskipTests -DskipITs -Dextension-tests-managed-modules -Dos.detected.arch=$DETECTED_OS_ARCH
      - name: Build integration tests managed dependencies
        env:
          DETECTED_OS_ARCH: ${{ steps.detect-os-arch.outputs.detected-os-arch }}
        run: |
          mvn -V -B --no-transfer-progress clean install -DskipTests -DskipITs -Dquarkus.build.skip=false -Dintegration-tests-managed-modules -Dos.detected.arch=$DETECTED_OS_ARCH
      - name: Build with Maven
        env:
          DETECTED_OS_ARCH: ${{ steps.detect-os-arch.outputs.detected-os-arch }}
        run: |
          mvn -V -B --no-transfer-progress clean install -DskipTests -DskipITs -Dquarkus.build.skip=false -Dextensions -Dintegration-tests -Dos.detected.arch=$DETECTED_OS_ARCH
  run-jvm-tests:
    name: Linux - JVM mode
    runs-on: ubuntu-latest
    needs: validation
    strategy:
      matrix:
        test-set: [ "extensions-1", "extensions-2", "extensions-3", "extensions-4", "extensions-5", "extensions-6", "extensions-7", "extensions-8", "extensions-9", "extensions-10", "integration-tests-1", "integration-tests-2", "integration-tests-3", "integration-tests-4", "integration-tests-5", "integration-tests-6", "integration-tests-7", "integration-tests-8", "integration-tests-9", "integration-tests-10" ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          check-latest: true
          cache: 'maven'
      - name: Test axis '${{ matrix.test-set }}'
        run: |
          MVN_ARGS=" -Dos.detected.arch=$(uname -m)"
          ./run_tests.sh 10 "${{ matrix.test-set }}" "$MVN_ARGS" "$MVN_ARGS"
  run-native-tests:
    name: Linux - native mode
    runs-on: ubuntu-latest
    needs: run-jvm-tests
    strategy:
      matrix:
        test-set: [ "integration-tests-1", "integration-tests-2", "integration-tests-3", "integration-tests-4", "integration-tests-5", "integration-tests-6", "integration-tests-7", "integration-tests-8", "integration-tests-9", "integration-tests-10", "integration-tests-11", "integration-tests-12", "integration-tests-13", "integration-tests-14", "integration-tests-15", "integration-tests-16", "integration-tests-17", "integration-tests-18", "integration-tests-19", "integration-tests-20", "integration-tests-21", "integration-tests-22" ]
    steps:
      - uses: actions/checkout@v4
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          check-latest: true
          cache: 'maven'
      - name: Test axis '${{ matrix.test-set }}'
        run: |
          MVN_ARGS=" -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi9-quarkus-mandrel-builder-image:jdk-21 -Dos.detected.arch=$(uname -m)"
          ./run_tests.sh 22 "${{ matrix.test-set }}" "$MVN_ARGS" "$MVN_ARGS"