name: 'Detect new Quarkus releases'
description: 'Detects newly released Quarkus versions'
inputs:
  gh-token:
    required: true
runs:
  using: "composite"
  steps:
    - name: Detect new releases
      id: detect
      shell: bash
      run: |
        echo "Setting up Git"
        gh auth setup-git
        git config --local user.email "quarkus-qe@redhat.com"
        git config --local user.name "QuarkusQE"
        refs=$(git ls-remote)
        echo "Currently this project has following refs: $refs"
        touch tags
        gh release list -R quarkusio/quarkus --exclude-drafts --exclude-pre-releases -L 7 --json 'tagName' | jq '.[].tagName' | while read tag; do
          tag=$(echo $tag | xargs)
          echo 'Found release with tag name' $tag
          # extraction of tests for 3.8.x is not supported
          if [[ $tag != '3.8.'* ]] && [[ $tag != '3.15.'* ]] && [[ $tag != '3.19.'* ]] && [[ $tag != '3.21.'* ]] && [[ $tag != '3.22.'* ]] && [[ $tag != '3.23.'* ]]; then
            if echo "$refs" | grep -q "heads/$tag"; then
              echo "Branch $tag already exists in this project, no test extraction is needed."
            else
              tagObj='"'
              tagObj+="$tag"
              tagObj+='",'
              echo "There is no branch of this name, hence we need to extract tests: $tagObj"
              echo -n "$tagObj" >> tags
            fi
          fi
        done
        tags="$(cat tags | xargs -0)"
        if [[ -n ${tags} ]]; then
          tags="[${tags::-1}]"
        fi
        echo "Collected tags output is: $tags"
        echo "tags=$tags" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ inputs.gh-token }}
        GH_REPO: ${{ github.repository }}
outputs:
  tags:
    description: "Quarkus release tags for which no Git project branch exists."
    value: ${{ steps.detect.outputs.tags }}
