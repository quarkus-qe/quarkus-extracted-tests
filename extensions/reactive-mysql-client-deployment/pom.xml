<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.quarkus.qe.tests</groupId>
    <artifactId>quarkus-main-tests</artifactId>
    <version>3.20.0</version>
    <relativePath>../../</relativePath>
  </parent>
  <artifactId>quarkus-reactive-mysql-client-deployment</artifactId>
  <version>3.20.0</version>
  <name>Quarkus - Reactive MySQL Client</name>
  <description>Tests extracted from project Quarkus - Reactive MySQL Client - Deployment</description>
  <properties>
    <reactive-mysql.url>vertx-reactive:mysql://localhost:3308/hibernate_orm_test</reactive-mysql.url>
    <rootDir>../../</rootDir>
  </properties>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-reactive-mysql-client-deployment</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-reactive-datasource-deployment</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-vertx-deployment</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-credentials-deployment</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-reactive-mysql-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health-spi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-devservices-mysql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-devservices-mariadb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-deployment</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-internal</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health-deployment</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.27.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-reactive-datasource-deployment</artifactId>
      <version>${community.quarkus.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-reactive-datasource</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-vertx</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-credentials</artifactId>
    </dependency>
  </dependencies>
  <build>
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>test-mariadb</id>
      <activation>
        <property>
          <name>test-containers</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-mariadb</id>
      <activation>
        <property>
          <name>start-containers</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>docker-start</id>
                <phase>compile</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>build</goal>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <images>
                <image>
                  <name>healthcheck-${mariadb.image}</name>
                  <alias>quarkus-test-mariadb</alias>
                  <build>
                    <from>${mariadb.image}</from>
                    <healthCheck>
                      <interval>5s</interval>
                      <timeout>3s</timeout>
                      <startPeriod>5s</startPeriod>
                      <retries>5</retries>
                      <cmd>
                        <shell>mysqladmin ping -h localhost -u root -psecret|| exit 1</shell>
                      </cmd>
                    </healthCheck>
                  </build>
                  <run>
                    <network>
                      <mode>bridge</mode>
                    </network>
                    <ports>
                      <port>3308:3306</port>
                    </ports>
                    <env>
                      <MYSQL_USER>hibernate_orm_test</MYSQL_USER>
                      <MYSQL_PASSWORD>hibernate_orm_test</MYSQL_PASSWORD>
                      <MYSQL_DATABASE>hibernate_orm_test</MYSQL_DATABASE>
                      <MYSQL_RANDOM_ROOT_PASSWORD>true</MYSQL_RANDOM_ROOT_PASSWORD>
                    </env>
                    <log>
                      <prefix>MariaDB:</prefix>
                      <date>default</date>
                      <color>cyan</color>
                    </log>
                    <tmpfs>/var/lib/mysql</tmpfs>
                    <wait>
                      <healthy>true</healthy>
                      <time>40000</time>
                    </wait>
                    <volumes>
                      <bind>
                        <volume>${project.basedir}/custom-mariadbconfig:/etc/mysql/conf.d${volume.access.modifier}</volume>
                        <volume>${project.basedir}/src/test/resources/setup.sql:/docker-entrypoint-initdb.d/setup.sql${volume.access.modifier}</volume>
                      </bind>
                    </volumes>
                  </run>
                </image>
              </images>
              <allContainers>true</allContainers>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>docker-prune</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${docker-prune.location}</executable>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>