<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.quarkus</groupId>
    <artifactId>quarkus-main-tests</artifactId>
    <version>3.20.0</version>
    <relativePath>../../</relativePath>
  </parent>
  <artifactId>quarkus-integration-test-main</artifactId>
  <version>3.20.0</version>
  <name>Quarkus - Integration Tests - Main</name>
  <description>Tests extracted from project Quarkus - Integration Tests - Main</description>
  <properties>
    <quarkus.package.jar.type>uber-jar</quarkus.package.jar.type>
    <quarkus.build.skip>${skipTests}</quarkus.build.skip>
    <native.surefire.skip>${skipTests}</native.surefire.skip>
    <quarkus.config-tracking.enabled>true</quarkus.config-tracking.enabled>
    <webjar.jquery-ui.version>1.13.0</webjar.jquery-ui.version>
    <hibernate-orm.dialect>org.hibernate.dialect.H2Dialect</hibernate-orm.dialect>
    <quarkus.native.container-build>true</quarkus.native.container-build>
    <datasource.password></datasource.password>
    <quarkus.native.builder-image.pull>missing</quarkus.native.builder-image.pull>
    <datasource.username></datasource.username>
    <datasource.url>jdbc:h2:tcp://localhost/mem:test</datasource.url>
    <gpg.skip>true</gpg.skip>
    <datasource.db-kind>h2</datasource.db-kind>
    <maven.deploy.skip>true</maven.deploy.skip>
  </properties>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-integration-test-class-transformer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-integration-test-shared-library</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-swagger-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-mutiny-reactive-streams-operators</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-narayana-jta</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-narayana-lra</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-undertow</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-websockets</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-fault-tolerance</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-scheduler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-elytron-security-properties-file</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jsonb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jaxb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-rxjava2</artifactId>
      <exclusions>
        <exclusion>
          <groupId>jakarta.activation</groupId>
          <artifactId>jakarta.activation-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.spec.javax.ws.rs</groupId>
          <artifactId>jboss-jaxrs-api_3.0_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-mutiny</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-h2</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-integration-test-common-jpa-entities</artifactId>
      <version>${quarkus.platform.version}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-context-propagation</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-component</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.27.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery-ui</artifactId>
      <version>${webjar.jquery-ui.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.web.samples.web-fragment</groupId>
      <artifactId>fragment</artifactId>
      <version>7.3.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>track-config-changes</id>
            <phase>process-resources</phase>
            <goals>
              <goal>track-config-changes</goal>
            </goals>
            <configuration>
              <dumpCurrentWhenRecordedUnavailable>true</dumpCurrentWhenRecordedUnavailable>
            </configuration>
          </execution>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>alphabetical</runOrder>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>test-postgresql</id>
      <activation>
        <property>
          <name>test-containers</name>
        </property>
      </activation>
      <properties>
        <datasource.username>hibernate_orm_test</datasource.username>
        <datasource.url>${postgres.url}</datasource.url>
        <datasource.db-kind>postgresql</datasource.db-kind>
        <hibernate-orm.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate-orm.dialect>
        <datasource.password>hibernate_orm_test</datasource.password>
      </properties>
      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-jdbc-postgresql</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-jdbc-postgresql-deployment</artifactId>
          <type>pom</type>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>native-image</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <quarkus.native.add-all-charsets>true</quarkus.native.add-all-charsets>
      </properties>
    </profile>
    <profile>
      <id>no-native</id>
      <activation>
        <property>
          <name>!native</name>
        </property>
      </activation>
      <properties>
        <os.detected.arch>x86_64</os.detected.arch>
        <os.detected.release.like.debian>true</os.detected.release.like.debian>
        <quarkus.package.jar.type>uber-jar</quarkus.package.jar.type>
        <os.detected.classifier>linux-x86_64</os.detected.classifier>
        <os.detected.release>ubuntu</os.detected.release>
        <os.detected.release.version>24.04</os.detected.release.version>
        <os.detected.bitness>64</os.detected.bitness>
        <os.detected.name>linux</os.detected.name>
        <os.detected.release.like.ubuntu>true</os.detected.release.like.ubuntu>
      </properties>
    </profile>
    <profile>
      <id>docker-postgresql</id>
      <activation>
        <property>
          <name>start-containers</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>docker-start</id>
                <phase>compile</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <images>
                <image>
                  <name>${postgres.image}</name>
                  <alias>postgresql</alias>
                  <run>
                    <env>
                      <POSTGRES_USER>hibernate_orm_test</POSTGRES_USER>
                      <POSTGRES_PASSWORD>hibernate_orm_test</POSTGRES_PASSWORD>
                      <POSTGRES_DB>hibernate_orm_test</POSTGRES_DB>
                    </env>
                    <ports>
                      <port>5431:5432</port>
                    </ports>
                    <wait>
                      <time>20000</time>
                      <log>(?s)ready to accept connections.*ready to accept connections</log>
                    </wait>
                  </run>
                </image>
              </images>
              <allContainers>true</allContainers>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>docker-prune</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${docker-prune.location}</executable>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <postgres.url>jdbc:postgresql://localhost:5431/hibernate_orm_test</postgres.url>
      </properties>
    </profile>
  </profiles>
</project>
